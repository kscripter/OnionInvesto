// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnionInvesto.Data.Context;

namespace OnionInvesto.Data.Migrations
{
    [DbContext(typeof(InvestoContext))]
    [Migration("20210610172056_AddedEntities")]
    partial class AddedEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.BankDetail", b =>
                {
                    b.Property<byte[]>("InvestorId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("AccountName")
                        .HasColumnType("text");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("text");

                    b.Property<string>("Bankname")
                        .HasColumnType("text");

                    b.HasKey("InvestorId");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.Investment", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<double>("AmountInvested")
                        .HasColumnType("double");

                    b.Property<string>("DepositType")
                        .HasColumnType("text");

                    b.Property<int>("InvestDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvestmentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InvestmentType")
                        .HasColumnType("text");

                    b.Property<byte[]>("InvestorId")
                        .HasColumnType("varbinary(16)");

                    b.Property<double>("ROI")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("InvestorId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.Investor", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Investors");
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.Manager", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.Role", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.User", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HashSalt")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.BankDetail", b =>
                {
                    b.HasOne("OnionInvesto.Core.Models.Entities.Investor", "Investor")
                        .WithOne("BankDetail")
                        .HasForeignKey("OnionInvesto.Core.Models.Entities.BankDetail", "InvestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnionInvesto.Core.Models.Entities.Investment", b =>
                {
                    b.HasOne("OnionInvesto.Core.Models.Entities.Investor", "Investor")
                        .WithMany("Investments")
                        .HasForeignKey("InvestorId");
                });
#pragma warning restore 612, 618
        }
    }
}
